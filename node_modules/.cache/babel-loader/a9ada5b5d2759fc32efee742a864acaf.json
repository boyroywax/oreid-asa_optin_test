{"ast":null,"code":"var _jsxFileName = \"/Users/j/Code/Guides/ORE-ID_and_React/6-Signing_Transactions/src/SignTransaction.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ChainNetwork } from \"oreid-js\";\nimport { useOreId, useUser } from \"oreid-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SignTransaction = () => {\n  _s();\n\n  const oreId = useOreId();\n  const user = useUser();\n  const chainNetwork = ChainNetwork.EthRopsten;\n  const [txnId, setTxnId] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onError = error => {\n    console.log(\"Transaction failed \", error);\n    setError(error);\n  };\n\n  const onSuccess = result => {\n    console.log(\"Transaction Successful. \", JSON.stringify(result));\n    setTxnId(result.transactionId);\n  };\n\n  const handleSign = async () => {\n    const signingAccount = user.chainAccounts.find(ca => ca.chainNetwork === chainNetwork);\n    const errorMsg = `User does not have any accounts on ${chainNetwork}`;\n\n    if (!signingAccount) {\n      console.log(errorMsg);\n      onError(errorMsg);\n      return;\n    }\n\n    ;\n    const transactionBody = {\n      from: signingAccount.chainAccount,\n      to: signingAccount.chainAccount,\n      value: 0\n    };\n    const transaction = await oreId.createTransaction({\n      chainAccount: signingAccount.chainAccount,\n      chainNetwork: signingAccount.chainNetwork,\n      //@ts-ignore\n      transaction: transactionBody,\n      signOptions: {\n        broadcast: true,\n        returnSignedTransaction: false\n      }\n    });\n    oreId.popup.sign({\n      transaction\n    }).then(onSuccess).catch(onError);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleSign();\n      },\n      children: \"Send Sample Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), txnId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Transaction Id: \", txnId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignTransaction, \"DF/4wzvfv5e5YKosUsi+lVnfkbE=\", false, function () {\n  return [useOreId, useUser];\n});\n\n_c = SignTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignTransaction\");","map":{"version":3,"names":["useState","ChainNetwork","useOreId","useUser","SignTransaction","oreId","user","chainNetwork","EthRopsten","txnId","setTxnId","error","setError","onError","console","log","onSuccess","result","JSON","stringify","transactionId","handleSign","signingAccount","chainAccounts","find","ca","errorMsg","transactionBody","from","chainAccount","to","value","transaction","createTransaction","signOptions","broadcast","returnSignedTransaction","popup","sign","then","catch","message"],"sources":["/Users/j/Code/Guides/ORE-ID_and_React/6-Signing_Transactions/src/SignTransaction.js"],"sourcesContent":["import { useState } from \"react\";\nimport { ChainNetwork } from \"oreid-js\";\nimport { useOreId, useUser } from \"oreid-react\";\n\n\nexport const SignTransaction = () => {\n    const oreId = useOreId();\n    const user = useUser();\n    const chainNetwork = ChainNetwork.EthRopsten;\n    const[ txnId, setTxnId ] = useState(\"\")\n    const[ error, setError ] = useState(\"\")\n\n    const onError = (error) => {\n        console.log(\"Transaction failed \", error);\n        setError( error );\n    };\n\n    const onSuccess = ( result ) => {\n        console.log( \n            \"Transaction Successful. \", JSON.stringify(result)\n        );\n        setTxnId(result.transactionId);\n    };\n\n    const handleSign = async () => {\n        const signingAccount = user.chainAccounts.find(\n            (ca) => ca.chainNetwork ===  chainNetwork\n        );\n    \n        const errorMsg = `User does not have any accounts on ${chainNetwork}`;\n    \n        if (!signingAccount) {\n            console.log( errorMsg );\n            onError( errorMsg )\n            return;\n        };\n    \n        const transactionBody = {\n            from: signingAccount.chainAccount,\n            to: signingAccount.chainAccount,\n            value: 0\n        };\n\n        const transaction = await oreId.createTransaction({\n            chainAccount: signingAccount.chainAccount,\n            chainNetwork: signingAccount.chainNetwork,\n            //@ts-ignore\n            transaction: transactionBody,\n            signOptions: {\n                broadcast: true,\n                returnSignedTransaction: false,\n            },\n        });\n        \n        oreId.popup\n            .sign({ transaction })\n            .then( onSuccess )\n            .catch( onError );\n    };\n\n    return(\n        <div>\n            <button\n                onClick={() => {\n                    handleSign()\n                }}\n            >\n                Send Sample Transaction\n            </button>\n\n            {error && <div>Error: {error.message}</div>}\n            {txnId && <div>Transaction Id: {txnId}</div>}\n        </div>\n    );\n};"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACjC,MAAMC,KAAK,GAAGH,QAAQ,EAAtB;EACA,MAAMI,IAAI,GAAGH,OAAO,EAApB;EACA,MAAMI,YAAY,GAAGN,YAAY,CAACO,UAAlC;EACA,MAAK,CAAEC,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAK,CAAEW,KAAF,EAASC,QAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAAnC;;EAEA,MAAMa,OAAO,GAAIF,KAAD,IAAW;IACvBG,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCJ,KAAnC;IACAC,QAAQ,CAAED,KAAF,CAAR;EACH,CAHD;;EAKA,MAAMK,SAAS,GAAKC,MAAF,IAAc;IAC5BH,OAAO,CAACC,GAAR,CACI,0BADJ,EACgCG,IAAI,CAACC,SAAL,CAAeF,MAAf,CADhC;IAGAP,QAAQ,CAACO,MAAM,CAACG,aAAR,CAAR;EACH,CALD;;EAOA,MAAMC,UAAU,GAAG,YAAY;IAC3B,MAAMC,cAAc,GAAGhB,IAAI,CAACiB,aAAL,CAAmBC,IAAnB,CAClBC,EAAD,IAAQA,EAAE,CAAClB,YAAH,KAAqBA,YADV,CAAvB;IAIA,MAAMmB,QAAQ,GAAI,sCAAqCnB,YAAa,EAApE;;IAEA,IAAI,CAACe,cAAL,EAAqB;MACjBR,OAAO,CAACC,GAAR,CAAaW,QAAb;MACAb,OAAO,CAAEa,QAAF,CAAP;MACA;IACH;;IAAA;IAED,MAAMC,eAAe,GAAG;MACpBC,IAAI,EAAEN,cAAc,CAACO,YADD;MAEpBC,EAAE,EAAER,cAAc,CAACO,YAFC;MAGpBE,KAAK,EAAE;IAHa,CAAxB;IAMA,MAAMC,WAAW,GAAG,MAAM3B,KAAK,CAAC4B,iBAAN,CAAwB;MAC9CJ,YAAY,EAAEP,cAAc,CAACO,YADiB;MAE9CtB,YAAY,EAAEe,cAAc,CAACf,YAFiB;MAG9C;MACAyB,WAAW,EAAEL,eAJiC;MAK9CO,WAAW,EAAE;QACTC,SAAS,EAAE,IADF;QAETC,uBAAuB,EAAE;MAFhB;IALiC,CAAxB,CAA1B;IAWA/B,KAAK,CAACgC,KAAN,CACKC,IADL,CACU;MAAEN;IAAF,CADV,EAEKO,IAFL,CAEWvB,SAFX,EAGKwB,KAHL,CAGY3B,OAHZ;EAIH,CAlCD;;EAoCA,oBACI;IAAA,wBACI;MACI,OAAO,EAAE,MAAM;QACXQ,UAAU;MACb,CAHL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EASKV,KAAK,iBAAI;MAAA,sBAAaA,KAAK,CAAC8B,OAAnB;IAAA;MAAA;MAAA;MAAA;IAAA,QATd,EAUKhC,KAAK,iBAAI;MAAA,+BAAsBA,KAAtB;IAAA;MAAA;MAAA;MAAA;IAAA,QAVd;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CArEM;;GAAML,e;UACKF,Q,EACDC,O;;;KAFJC,e"},"metadata":{},"sourceType":"module"}