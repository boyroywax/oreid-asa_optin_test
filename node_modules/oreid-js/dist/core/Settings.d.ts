import { ChainNetwork, ConfigType, SettingChainNetwork } from '../models';
import OreIdContext from './IOreidContext';
export default class Settings {
    constructor(args: {
        oreIdContext: OreIdContext;
    });
    private _cachedChainNetworks;
    private _oreIdContext;
    /** Calls getConfigFromApi() to retrieve settings for all chain networks defined by OreID service
     * and caches the result */
    getAllChainNetworkSettings(): Promise<SettingChainNetwork[]>;
    /** Returns Chain Network Settings for a specific chain */
    getChainNetworkSettings(chainNetwork: ChainNetwork): Promise<SettingChainNetwork>;
    /** Loads settings value from the server
      e.g. configType='chains' returns valid chain types and addresses */
    getConfig(configType: ConfigType): Promise<any>;
    /**
     *  Call api services/config to get configuration values of a specific type
     *  Returns: for configType:Config.Chains, returns array of SettingChainNetwork objects for all chains suported by the service
     * */
    getConfigFromApi(configType: ConfigType.Chains): Promise<any>;
}
