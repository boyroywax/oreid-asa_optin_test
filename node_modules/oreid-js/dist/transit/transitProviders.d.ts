import { ExternalWalletType, ChainPlatformType } from '../common/models';
import { TransitDiscoverKeyLookupCallback } from './models';
export declare type TransitProviderAttributes = {
    providerName: ExternalWalletType;
    chainType: ChainPlatformType;
    providerId: string;
    requiresLogin: boolean;
    supportsDiscovery: boolean;
    supportsSignArbitrary: boolean;
    requiresLogoutLoginToDiscover: boolean;
    requiresDiscoverToLogin: boolean;
    defaultDiscoveryPathIndexList?: number[];
    helpText: {
        login: string;
        sign: string;
        discover: string;
        versionsRequired: string;
    };
    discoveryKeyLookupFunc?: TransitDiscoverKeyLookupCallback;
    logoUrl: string;
};
export declare const transitProviderAttributesData: TransitProviderAttributes[];
/** Get provider-specific settings and metadata */
export declare function getTransitProviderAttributes(walletType: ExternalWalletType): TransitProviderAttributes;
/** Get provider-specific settings and metadata */
export declare function getTransitProviderAttributesByProviderId(providerId: string): TransitProviderAttributes;
/** Get the list of provider attributes for a given chain */
export declare function getTransitProviderAttributesByChain(chain: ChainPlatformType): TransitProviderAttributes[];
export declare const supportedTransitProviders: ExternalWalletType[];
