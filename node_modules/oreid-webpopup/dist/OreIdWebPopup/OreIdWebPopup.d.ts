import { OreId, PopupPlugin, PopupPluginAuthParams, PopupPluginAuthSuccessResults, PopupPluginNewChainAccountParams, PopupPluginRecoverAccountParams, PopupPluginSignParams, WebWidgetAuthResult, WebWidgetSignResult } from 'oreid-js';
import { WebWidgetCoreHandler } from '../WebWidgetCoreHandler';
export declare class OreIdWebPopup implements PopupPlugin {
    private oreId;
    private webWidgetCore;
    /**
     * * WARNING: This class should only be created using createOreIdWebWidget() never via new OreIdWebWidget()
     */
    constructor({ oreId, webWidgetCore }: {
        oreId: OreId;
        webWidgetCore: WebWidgetCoreHandler;
    });
    /** Present Authentication login flow user experience */
    auth: (params: PopupPluginAuthParams) => Promise<PopupPluginAuthSuccessResults>;
    /** Present Sign transaction user experience */
    sign: (params: PopupPluginSignParams) => Promise<WebWidgetSignResult | {
        processId: string;
        signedTransaction: string;
        transactionId: string;
    }>;
    /** Present New Chain Account user experience */
    newChainAccount: (params: PopupPluginNewChainAccountParams) => Promise<{
        chainAccount: string;
        chainNetwork: string;
    }>;
    /** Present Recover Account (e.g. Reset Password) user experience */
    recoverAccount: (params: PopupPluginRecoverAccountParams) => Promise<WebWidgetAuthResult>;
}
